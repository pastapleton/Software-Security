// This is a generated source file for Chilkat version 9.4.1.34
#ifndef _C_CkFtp2_H
#define _C_CkFtp2_H
#include "chilkatDefs.h"

#include "Chilkat_C.h"

HCkFtp2 CkFtp2_Create(void);
void CkFtp2_Dispose(HCkFtp2 handle);
void CkFtp2_getAccount(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putAccount(HCkFtp2 cHandle, const char *newVal);
int CkFtp2_getActivePortRangeEnd(HCkFtp2 cHandle);
void CkFtp2_putActivePortRangeEnd(HCkFtp2 cHandle, int newVal);
int CkFtp2_getActivePortRangeStart(HCkFtp2 cHandle);
void CkFtp2_putActivePortRangeStart(HCkFtp2 cHandle, int newVal);
unsigned long CkFtp2_getAllocateSize(HCkFtp2 cHandle);
void CkFtp2_putAllocateSize(HCkFtp2 cHandle, unsigned long newVal);
unsigned long CkFtp2_getAsyncBytesReceived(HCkFtp2 cHandle);
__int64 CkFtp2_getAsyncBytesReceived64(HCkFtp2 cHandle);
void CkFtp2_getAsyncBytesReceivedStr(HCkFtp2 cHandle, HCkString retval);
unsigned long CkFtp2_getAsyncBytesSent(HCkFtp2 cHandle);
__int64 CkFtp2_getAsyncBytesSent64(HCkFtp2 cHandle);
void CkFtp2_getAsyncBytesSentStr(HCkFtp2 cHandle, HCkString retval);
BOOL CkFtp2_getAsyncFinished(HCkFtp2 cHandle);
void CkFtp2_getAsyncLog(HCkFtp2 cHandle, HCkString retval);
BOOL CkFtp2_getAsyncSuccess(HCkFtp2 cHandle);
BOOL CkFtp2_getAuthSsl(HCkFtp2 cHandle);
void CkFtp2_putAuthSsl(HCkFtp2 cHandle, BOOL newVal);
BOOL CkFtp2_getAuthTls(HCkFtp2 cHandle);
void CkFtp2_putAuthTls(HCkFtp2 cHandle, BOOL newVal);
BOOL CkFtp2_getAutoFeat(HCkFtp2 cHandle);
void CkFtp2_putAutoFeat(HCkFtp2 cHandle, BOOL newVal);
BOOL CkFtp2_getAutoFix(HCkFtp2 cHandle);
void CkFtp2_putAutoFix(HCkFtp2 cHandle, BOOL newVal);
BOOL CkFtp2_getAutoGetSizeForProgress(HCkFtp2 cHandle);
void CkFtp2_putAutoGetSizeForProgress(HCkFtp2 cHandle, BOOL newVal);
BOOL CkFtp2_getAutoSyst(HCkFtp2 cHandle);
void CkFtp2_putAutoSyst(HCkFtp2 cHandle, BOOL newVal);
BOOL CkFtp2_getAutoXcrc(HCkFtp2 cHandle);
void CkFtp2_putAutoXcrc(HCkFtp2 cHandle, BOOL newVal);
int CkFtp2_getBandwidthThrottleDown(HCkFtp2 cHandle);
void CkFtp2_putBandwidthThrottleDown(HCkFtp2 cHandle, int newVal);
int CkFtp2_getBandwidthThrottleUp(HCkFtp2 cHandle);
void CkFtp2_putBandwidthThrottleUp(HCkFtp2 cHandle, int newVal);
void CkFtp2_getClientIpAddress(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putClientIpAddress(HCkFtp2 cHandle, const char *newVal);
int CkFtp2_getConnectFailReason(HCkFtp2 cHandle);
int CkFtp2_getConnectTimeout(HCkFtp2 cHandle);
void CkFtp2_putConnectTimeout(HCkFtp2 cHandle, int newVal);
BOOL CkFtp2_getConnectVerified(HCkFtp2 cHandle);
int CkFtp2_getCrlfMode(HCkFtp2 cHandle);
void CkFtp2_putCrlfMode(HCkFtp2 cHandle, int newVal);
void CkFtp2_getDebugLogFilePath(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putDebugLogFilePath(HCkFtp2 cHandle, const char *newVal);
void CkFtp2_getDirListingCharset(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putDirListingCharset(HCkFtp2 cHandle, const char *newVal);
int CkFtp2_getDownloadRate(HCkFtp2 cHandle);
void CkFtp2_getForcePortIpAddress(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putForcePortIpAddress(HCkFtp2 cHandle, const char *newVal);
void CkFtp2_getGreeting(HCkFtp2 cHandle, HCkString retval);
BOOL CkFtp2_getHasModeZ(HCkFtp2 cHandle);
int CkFtp2_getHeartbeatMs(HCkFtp2 cHandle);
void CkFtp2_putHeartbeatMs(HCkFtp2 cHandle, int newVal);
void CkFtp2_getHostname(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putHostname(HCkFtp2 cHandle, const char *newVal);
void CkFtp2_getHttpProxyAuthMethod(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putHttpProxyAuthMethod(HCkFtp2 cHandle, const char *newVal);
void CkFtp2_getHttpProxyDomain(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putHttpProxyDomain(HCkFtp2 cHandle, const char *newVal);
void CkFtp2_getHttpProxyHostname(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putHttpProxyHostname(HCkFtp2 cHandle, const char *newVal);
void CkFtp2_getHttpProxyPassword(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putHttpProxyPassword(HCkFtp2 cHandle, const char *newVal);
int CkFtp2_getHttpProxyPort(HCkFtp2 cHandle);
void CkFtp2_putHttpProxyPort(HCkFtp2 cHandle, int newVal);
void CkFtp2_getHttpProxyUsername(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putHttpProxyUsername(HCkFtp2 cHandle, const char *newVal);
int CkFtp2_getIdleTimeoutMs(HCkFtp2 cHandle);
void CkFtp2_putIdleTimeoutMs(HCkFtp2 cHandle, int newVal);
BOOL CkFtp2_getIsConnected(HCkFtp2 cHandle);
BOOL CkFtp2_getKeepSessionLog(HCkFtp2 cHandle);
void CkFtp2_putKeepSessionLog(HCkFtp2 cHandle, BOOL newVal);
void CkFtp2_getLastErrorHtml(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_getLastErrorText(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_getLastErrorXml(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_getLastReply(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_getListPattern(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putListPattern(HCkFtp2 cHandle, const char *newVal);
BOOL CkFtp2_getLoginVerified(HCkFtp2 cHandle);
int CkFtp2_getNumFilesAndDirs(HCkFtp2 cHandle);
BOOL CkFtp2_getPartialTransfer(HCkFtp2 cHandle);
BOOL CkFtp2_getPassive(HCkFtp2 cHandle);
void CkFtp2_putPassive(HCkFtp2 cHandle, BOOL newVal);
BOOL CkFtp2_getPassiveUseHostAddr(HCkFtp2 cHandle);
void CkFtp2_putPassiveUseHostAddr(HCkFtp2 cHandle, BOOL newVal);
void CkFtp2_getPassword(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putPassword(HCkFtp2 cHandle, const char *newVal);
int CkFtp2_getPort(HCkFtp2 cHandle);
void CkFtp2_putPort(HCkFtp2 cHandle, int newVal);
BOOL CkFtp2_getPreferNlst(HCkFtp2 cHandle);
void CkFtp2_putPreferNlst(HCkFtp2 cHandle, BOOL newVal);
int CkFtp2_getProgressMonSize(HCkFtp2 cHandle);
void CkFtp2_putProgressMonSize(HCkFtp2 cHandle, int newVal);
__int64 CkFtp2_getProgressMonSize64(HCkFtp2 cHandle);
void CkFtp2_putProgressMonSize64(HCkFtp2 cHandle, __int64 newVal);
void CkFtp2_getProxyHostname(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putProxyHostname(HCkFtp2 cHandle, const char *newVal);
int CkFtp2_getProxyMethod(HCkFtp2 cHandle);
void CkFtp2_putProxyMethod(HCkFtp2 cHandle, int newVal);
void CkFtp2_getProxyPassword(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putProxyPassword(HCkFtp2 cHandle, const char *newVal);
int CkFtp2_getProxyPort(HCkFtp2 cHandle);
void CkFtp2_putProxyPort(HCkFtp2 cHandle, int newVal);
void CkFtp2_getProxyUsername(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putProxyUsername(HCkFtp2 cHandle, const char *newVal);
int CkFtp2_getReadTimeout(HCkFtp2 cHandle);
void CkFtp2_putReadTimeout(HCkFtp2 cHandle, int newVal);
BOOL CkFtp2_getRequireSslCertVerify(HCkFtp2 cHandle);
void CkFtp2_putRequireSslCertVerify(HCkFtp2 cHandle, BOOL newVal);
BOOL CkFtp2_getRestartNext(HCkFtp2 cHandle);
void CkFtp2_putRestartNext(HCkFtp2 cHandle, BOOL newVal);
int CkFtp2_getSendBufferSize(HCkFtp2 cHandle);
void CkFtp2_putSendBufferSize(HCkFtp2 cHandle, int newVal);
void CkFtp2_getSessionLog(HCkFtp2 cHandle, HCkString retval);
BOOL CkFtp2_getSkipFinalReply(HCkFtp2 cHandle);
void CkFtp2_putSkipFinalReply(HCkFtp2 cHandle, BOOL newVal);
int CkFtp2_getSoRcvBuf(HCkFtp2 cHandle);
void CkFtp2_putSoRcvBuf(HCkFtp2 cHandle, int newVal);
int CkFtp2_getSoSndBuf(HCkFtp2 cHandle);
void CkFtp2_putSoSndBuf(HCkFtp2 cHandle, int newVal);
void CkFtp2_getSocksHostname(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putSocksHostname(HCkFtp2 cHandle, const char *newVal);
void CkFtp2_getSocksPassword(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putSocksPassword(HCkFtp2 cHandle, const char *newVal);
int CkFtp2_getSocksPort(HCkFtp2 cHandle);
void CkFtp2_putSocksPort(HCkFtp2 cHandle, int newVal);
void CkFtp2_getSocksUsername(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putSocksUsername(HCkFtp2 cHandle, const char *newVal);
int CkFtp2_getSocksVersion(HCkFtp2 cHandle);
void CkFtp2_putSocksVersion(HCkFtp2 cHandle, int newVal);
BOOL CkFtp2_getSsl(HCkFtp2 cHandle);
void CkFtp2_putSsl(HCkFtp2 cHandle, BOOL newVal);
void CkFtp2_getSslProtocol(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putSslProtocol(HCkFtp2 cHandle, const char *newVal);
BOOL CkFtp2_getSslServerCertVerified(HCkFtp2 cHandle);
void CkFtp2_getSyncPreview(HCkFtp2 cHandle, HCkString retval);
int CkFtp2_getUploadRate(HCkFtp2 cHandle);
BOOL CkFtp2_getUseEpsv(HCkFtp2 cHandle);
void CkFtp2_putUseEpsv(HCkFtp2 cHandle, BOOL newVal);
void CkFtp2_getUsername(HCkFtp2 cHandle, HCkString retval);
void CkFtp2_putUsername(HCkFtp2 cHandle, const char *newVal);
BOOL CkFtp2_getUtf8(HCkFtp2 cHandle);
void CkFtp2_putUtf8(HCkFtp2 cHandle, BOOL newVal);
BOOL CkFtp2_getVerboseLogging(HCkFtp2 cHandle);
void CkFtp2_putVerboseLogging(HCkFtp2 cHandle, BOOL newVal);
void CkFtp2_getVersion(HCkFtp2 cHandle, HCkString retval);
BOOL CkFtp2_AppendFile(HCkFtp2 cHandle, const char *localPath, const char *remoteFilename);
BOOL CkFtp2_AppendFileFromBinaryData(HCkFtp2 cHandle, const char *remoteFilename, HCkByteData binaryData);
BOOL CkFtp2_AppendFileFromTextData(HCkFtp2 cHandle, const char *remoteFilename, const char *textData, const char *charset);
void CkFtp2_AsyncAbort(HCkFtp2 cHandle);
BOOL CkFtp2_AsyncAppendFileStart(HCkFtp2 cHandle, const char *localPath, const char *remoteFilename);
BOOL CkFtp2_AsyncGetFileStart(HCkFtp2 cHandle, const char *remoteFilename, const char *localFilename);
BOOL CkFtp2_AsyncPutFileStart(HCkFtp2 cHandle, const char *localPath, const char *remoteFilename);
BOOL CkFtp2_ChangeRemoteDir(HCkFtp2 cHandle, const char *relativeDirPath);
BOOL CkFtp2_ClearControlChannel(HCkFtp2 cHandle);
void CkFtp2_ClearDirCache(HCkFtp2 cHandle);
void CkFtp2_ClearSessionLog(HCkFtp2 cHandle);
BOOL CkFtp2_Connect(HCkFtp2 cHandle);
BOOL CkFtp2_ConnectOnly(HCkFtp2 cHandle);
BOOL CkFtp2_ConvertToTls(HCkFtp2 cHandle);
BOOL CkFtp2_CreatePlan(HCkFtp2 cHandle, const char *localDir, HCkString outStr);
BOOL CkFtp2_CreateRemoteDir(HCkFtp2 cHandle, const char *dir);
int CkFtp2_DeleteMatching(HCkFtp2 cHandle, const char *remotePattern);
BOOL CkFtp2_DeleteRemoteFile(HCkFtp2 cHandle, const char *filename);
BOOL CkFtp2_DeleteTree(HCkFtp2 cHandle);
int CkFtp2_DetermineProxyMethod(HCkFtp2 cHandle);
BOOL CkFtp2_DetermineSettings(HCkFtp2 cHandle, HCkString outXmlReport);
BOOL CkFtp2_DirTreeXml(HCkFtp2 cHandle, HCkString outStrXml);
BOOL CkFtp2_Disconnect(HCkFtp2 cHandle);
BOOL CkFtp2_DownloadTree(HCkFtp2 cHandle, const char *localRoot);
BOOL CkFtp2_Feat(HCkFtp2 cHandle, HCkString outStr);
HCkDateTime CkFtp2_GetCreateDt(HCkFtp2 cHandle, int index);
HCkDateTime CkFtp2_GetCreateDtByName(HCkFtp2 cHandle, const char *filename);
BOOL CkFtp2_GetCreateTime(HCkFtp2 cHandle, int index, SYSTEMTIME *outSysTime);
BOOL CkFtp2_GetCreateTimeByName(HCkFtp2 cHandle, const char *filename, SYSTEMTIME *outSysTime);
BOOL CkFtp2_GetCreateTimeByNameStr(HCkFtp2 cHandle, const char *filename, HCkString outStr);
BOOL CkFtp2_GetCreateTimeStr(HCkFtp2 cHandle, int index, HCkString outStr);
BOOL CkFtp2_GetCurrentRemoteDir(HCkFtp2 cHandle, HCkString outStr);
BOOL CkFtp2_GetFile(HCkFtp2 cHandle, const char *remoteFilename, const char *localPath);
BOOL CkFtp2_GetFilename(HCkFtp2 cHandle, int index, HCkString outStr);
BOOL CkFtp2_GetIsDirectory(HCkFtp2 cHandle, int index);
BOOL CkFtp2_GetIsSymbolicLink(HCkFtp2 cHandle, int index);
HCkDateTime CkFtp2_GetLastAccessDt(HCkFtp2 cHandle, int index);
HCkDateTime CkFtp2_GetLastAccessDtByName(HCkFtp2 cHandle, const char *filename);
BOOL CkFtp2_GetLastAccessTime(HCkFtp2 cHandle, int index, SYSTEMTIME *outSysTime);
BOOL CkFtp2_GetLastAccessTimeByName(HCkFtp2 cHandle, const char *filename, SYSTEMTIME *outSysTime);
BOOL CkFtp2_GetLastAccessTimeByNameStr(HCkFtp2 cHandle, const char *filename, HCkString outStr);
BOOL CkFtp2_GetLastAccessTimeStr(HCkFtp2 cHandle, int index, HCkString outStr);
HCkDateTime CkFtp2_GetLastModDt(HCkFtp2 cHandle, int index);
HCkDateTime CkFtp2_GetLastModDtByName(HCkFtp2 cHandle, const char *filename);
BOOL CkFtp2_GetLastModifiedTime(HCkFtp2 cHandle, int index, SYSTEMTIME *outSysTime);
BOOL CkFtp2_GetLastModifiedTimeByName(HCkFtp2 cHandle, const char *filename, SYSTEMTIME *outSysTime);
BOOL CkFtp2_GetLastModifiedTimeByNameStr(HCkFtp2 cHandle, const char *filename, HCkString outStr);
BOOL CkFtp2_GetLastModifiedTimeStr(HCkFtp2 cHandle, int index, HCkString outStr);
BOOL CkFtp2_GetRemoteFileBinaryData(HCkFtp2 cHandle, const char *remoteFilename, HCkByteData outData);
BOOL CkFtp2_GetRemoteFileTextC(HCkFtp2 cHandle, const char *remoteFilename, const char *charset, HCkString outStr);
BOOL CkFtp2_GetRemoteFileTextData(HCkFtp2 cHandle, const char *remoteFilename, HCkString outStr);
int CkFtp2_GetSize(HCkFtp2 cHandle, int index);
__int64 CkFtp2_GetSize64(HCkFtp2 cHandle, int index);
int CkFtp2_GetSizeByName(HCkFtp2 cHandle, const char *filname);
__int64 CkFtp2_GetSizeByName64(HCkFtp2 cHandle, const char *filename);
BOOL CkFtp2_GetSizeStr(HCkFtp2 cHandle, int index, HCkString outStr);
BOOL CkFtp2_GetSizeStrByName(HCkFtp2 cHandle, const char *filename, HCkString outStr);
HCkCert CkFtp2_GetSslServerCert(HCkFtp2 cHandle);
BOOL CkFtp2_GetTextDirListing(HCkFtp2 cHandle, const char *pattern, HCkString outStrRawListing);
BOOL CkFtp2_GetXmlDirListing(HCkFtp2 cHandle, const char *pattern, HCkString outStrXmlListing);
BOOL CkFtp2_IsUnlocked(HCkFtp2 cHandle);
BOOL CkFtp2_LoginAfterConnectOnly(HCkFtp2 cHandle);
int CkFtp2_MGetFiles(HCkFtp2 cHandle, const char *remotePattern, const char *localDir);
int CkFtp2_MPutFiles(HCkFtp2 cHandle, const char *pattern);
BOOL CkFtp2_NlstXml(HCkFtp2 cHandle, const char *pattern, HCkString outStr);
BOOL CkFtp2_Noop(HCkFtp2 cHandle);
BOOL CkFtp2_PutFile(HCkFtp2 cHandle, const char *localPath, const char *remoteFilename);
BOOL CkFtp2_PutFileFromBinaryData(HCkFtp2 cHandle, const char *remoteFilename, HCkByteData binaryData);
BOOL CkFtp2_PutFileFromTextData(HCkFtp2 cHandle, const char *remoteFilename, const char *textData, const char *charset);
BOOL CkFtp2_PutPlan(HCkFtp2 cHandle, const char *planUtf8, const char *planLogFilePath);
BOOL CkFtp2_PutTree(HCkFtp2 cHandle, const char *localDir);
BOOL CkFtp2_Quote(HCkFtp2 cHandle, const char *cmd);
BOOL CkFtp2_RemoveRemoteDir(HCkFtp2 cHandle, const char *dir);
BOOL CkFtp2_RenameRemoteFile(HCkFtp2 cHandle, const char *existingFilename, const char *newFilename);
BOOL CkFtp2_SaveLastError(HCkFtp2 cHandle, const char *path);
BOOL CkFtp2_SendCommand(HCkFtp2 cHandle, const char *cmd, HCkString outReply);
BOOL CkFtp2_SetModeZ(HCkFtp2 cHandle);
void CkFtp2_SetOldestDate(HCkFtp2 cHandle, SYSTEMTIME *oldestDateTime);
void CkFtp2_SetOldestDateStr(HCkFtp2 cHandle, const char *oldestDateTimeStr);
BOOL CkFtp2_SetRemoteFileDateTime(HCkFtp2 cHandle, SYSTEMTIME *dateTime, const char *remoteFilename);
BOOL CkFtp2_SetRemoteFileDateTimeStr(HCkFtp2 cHandle, const char *dateTimeStr, const char *remoteFilename);
BOOL CkFtp2_SetRemoteFileDt(HCkFtp2 cHandle, HCkDateTime dt, const char *remoteFilename);
void CkFtp2_SetSslCertRequirement(HCkFtp2 cHandle, const char *name, const char *value);
BOOL CkFtp2_SetSslClientCert(HCkFtp2 cHandle, HCkCert cert);
BOOL CkFtp2_SetSslClientCertPem(HCkFtp2 cHandle, const char *pemDataOrFilename, const char *pemPassword);
BOOL CkFtp2_SetSslClientCertPfx(HCkFtp2 cHandle, const char *pfxPath, const char *pfxPassword);
BOOL CkFtp2_SetTypeAscii(HCkFtp2 cHandle);
BOOL CkFtp2_SetTypeBinary(HCkFtp2 cHandle);
BOOL CkFtp2_Site(HCkFtp2 cHandle, const char *parms);
void CkFtp2_SleepMs(HCkFtp2 cHandle, int millisec);
BOOL CkFtp2_Stat(HCkFtp2 cHandle, HCkString outStr);
BOOL CkFtp2_SyncDeleteRemote(HCkFtp2 cHandle, const char *localRoot);
BOOL CkFtp2_SyncLocalDir(HCkFtp2 cHandle, const char *localRoot, int mode);
BOOL CkFtp2_SyncLocalTree(HCkFtp2 cHandle, const char *localRoot, int mode);
BOOL CkFtp2_SyncRemoteTree(HCkFtp2 cHandle, const char *localRoot, int mode);
BOOL CkFtp2_SyncRemoteTree2(HCkFtp2 cHandle, const char *localRoot, int mode, BOOL bDescend, BOOL bPreviewOnly);
BOOL CkFtp2_Syst(HCkFtp2 cHandle, HCkString outStr);
BOOL CkFtp2_UnlockComponent(HCkFtp2 cHandle, const char *code);
const char *CkFtp2_account(HCkFtp2 cHandle);
const char *CkFtp2_asyncBytesReceivedStr(HCkFtp2 cHandle);
const char *CkFtp2_asyncBytesSentStr(HCkFtp2 cHandle);
const char *CkFtp2_asyncLog(HCkFtp2 cHandle);
const char *CkFtp2_ck_stat(HCkFtp2 cHandle);
const char *CkFtp2_clientIpAddress(HCkFtp2 cHandle);
const char *CkFtp2_createPlan(HCkFtp2 cHandle, const char *localDir);
const char *CkFtp2_createTimeByNameStr(HCkFtp2 cHandle, const char *filename);
const char *CkFtp2_createTimeStr(HCkFtp2 cHandle, int index);
const char *CkFtp2_currentRemoteDir(HCkFtp2 cHandle);
const char *CkFtp2_debugLogFilePath(HCkFtp2 cHandle);
const char *CkFtp2_determineSettings(HCkFtp2 cHandle);
const char *CkFtp2_dirListingCharset(HCkFtp2 cHandle);
const char *CkFtp2_dirTreeXml(HCkFtp2 cHandle);
const char *CkFtp2_feat(HCkFtp2 cHandle);
const char *CkFtp2_filename(HCkFtp2 cHandle, int index);
const char *CkFtp2_forcePortIpAddress(HCkFtp2 cHandle);
const char *CkFtp2_getCreateTimeByNameStr(HCkFtp2 cHandle, const char *filename);
const char *CkFtp2_getCreateTimeStr(HCkFtp2 cHandle, int index);
const char *CkFtp2_getCurrentRemoteDir(HCkFtp2 cHandle);
const char *CkFtp2_getFilename(HCkFtp2 cHandle, int index);
const char *CkFtp2_getLastAccessTimeByNameStr(HCkFtp2 cHandle, const char *filename);
const char *CkFtp2_getLastAccessTimeStr(HCkFtp2 cHandle, int index);
const char *CkFtp2_getLastModifiedTimeByNameStr(HCkFtp2 cHandle, const char *filename);
const char *CkFtp2_getLastModifiedTimeStr(HCkFtp2 cHandle, int index);
const char *CkFtp2_getRemoteFileTextC(HCkFtp2 cHandle, const char *remoteFilename, const char *charset);
const char *CkFtp2_getRemoteFileTextData(HCkFtp2 cHandle, const char *remoteFilename);
const char *CkFtp2_getSizeStr(HCkFtp2 cHandle, int index);
const char *CkFtp2_getSizeStrByName(HCkFtp2 cHandle, const char *filename);
const char *CkFtp2_getTextDirListing(HCkFtp2 cHandle, const char *pattern);
const char *CkFtp2_getXmlDirListing(HCkFtp2 cHandle, const char *pattern);
const char *CkFtp2_greeting(HCkFtp2 cHandle);
const char *CkFtp2_hostname(HCkFtp2 cHandle);
const char *CkFtp2_httpProxyAuthMethod(HCkFtp2 cHandle);
const char *CkFtp2_httpProxyDomain(HCkFtp2 cHandle);
const char *CkFtp2_httpProxyHostname(HCkFtp2 cHandle);
const char *CkFtp2_httpProxyPassword(HCkFtp2 cHandle);
const char *CkFtp2_httpProxyUsername(HCkFtp2 cHandle);
const char *CkFtp2_lastAccessTimeByNameStr(HCkFtp2 cHandle, const char *filename);
const char *CkFtp2_lastAccessTimeStr(HCkFtp2 cHandle, int index);
const char *CkFtp2_lastErrorHtml(HCkFtp2 cHandle);
const char *CkFtp2_lastErrorText(HCkFtp2 cHandle);
const char *CkFtp2_lastErrorXml(HCkFtp2 cHandle);
const char *CkFtp2_lastModifiedTimeByNameStr(HCkFtp2 cHandle, const char *filename);
const char *CkFtp2_lastModifiedTimeStr(HCkFtp2 cHandle, int index);
const char *CkFtp2_lastReply(HCkFtp2 cHandle);
const char *CkFtp2_listPattern(HCkFtp2 cHandle);
const char *CkFtp2_nlstXml(HCkFtp2 cHandle, const char *pattern);
const char *CkFtp2_password(HCkFtp2 cHandle);
const char *CkFtp2_proxyHostname(HCkFtp2 cHandle);
const char *CkFtp2_proxyPassword(HCkFtp2 cHandle);
const char *CkFtp2_proxyUsername(HCkFtp2 cHandle);
const char *CkFtp2_remoteFileTextC(HCkFtp2 cHandle, const char *remoteFilename, const char *charset);
const char *CkFtp2_remoteFileTextData(HCkFtp2 cHandle, const char *remoteFilename);
const char *CkFtp2_sendCommand(HCkFtp2 cHandle, const char *cmd);
const char *CkFtp2_sessionLog(HCkFtp2 cHandle);
const char *CkFtp2_sizeStr(HCkFtp2 cHandle, int index);
const char *CkFtp2_sizeStrByName(HCkFtp2 cHandle, const char *filename);
const char *CkFtp2_socksHostname(HCkFtp2 cHandle);
const char *CkFtp2_socksPassword(HCkFtp2 cHandle);
const char *CkFtp2_socksUsername(HCkFtp2 cHandle);
const char *CkFtp2_sslProtocol(HCkFtp2 cHandle);
const char *CkFtp2_syncPreview(HCkFtp2 cHandle);
const char *CkFtp2_syst(HCkFtp2 cHandle);
const char *CkFtp2_textDirListing(HCkFtp2 cHandle, const char *pattern);
const char *CkFtp2_username(HCkFtp2 cHandle);
const char *CkFtp2_version(HCkFtp2 cHandle);
const char *CkFtp2_xmlDirListing(HCkFtp2 cHandle, const char *pattern);
#endif
